-----------------------------------------------------------------------------------------------
# AR Invoice Query API Documentation followed by actual openAPI.yaml spec at the bottom
------------------------------------------------------------------------------------------------

Overview
This API allows users to submit natural language queries, which are then processed into SQL queries. The resulting queries are executed against a Snowflake database, and the API returns the top 100 AR invoices along with dynamic insights. This API supports pagination, sorting, and a variety of filtering options for the invoice data.

API Version: 1.0.0
Authentication
This API requires two types of authentication methods:
Bearer Authentication - Using an API access token.
User Token - A user-specific token passed via a header.

Security Schemes:
BearerAuth: Uses an HTTP bearer token for authentication.
UserToken: A custom API key passed in the header (e.g., x-token).

Base URL
https://production-domain.com/api/v1
Endpoints
1. POST /invoices/query
Summary:
This endpoint processes a natural language query, generates an equivalent SQL query, executes it against the database, and returns the top 100 AR invoices along with dynamic insights.

Request:
Request Body:
json
{
  "query": "Show all invoices for Acme Corp."
}
query (required): A string containing the natural language query to retrieve invoices.
Query Parameters:
page (optional, default: 1): The page number for pagination.
Example: page=1
page_size (optional, default: 100): The number of invoices to return per page (maximum of 100).
Example: page_size=100
sort_by (optional): The field by which to sort the results, e.g., invoice_date, invoice_number.
Example: sort_by=invoice_date
sort_order (optional): The sorting order, either asc (ascending) or desc (descending).
Example: sort_order=desc
Response:
200 - Successful Response
json
{
  "sql_query": "SELECT * FROM invoices WHERE customer_name = 'Acme Corp.'",
  "data": [
    {
      "subsidiary": "SubsidiaryA123",
      "business_unit": "Sales",
      "customer_name": "Acme Corp.",
      "invoice_number": "INV123456",
      "invoice_date": "2024-01-01",
      "invoice_status": "OPEN",
      "invoice_due_date": "2024-02-01",
      "invoice_aging_bucket": "0-30",
      "memo": "Initial invoice",
      "invoice_original_amount_local": 1000.0,
      "invoice_original_amount_usd": 1000.0,
      "invoice_open_amount_local": 1000.0,
      "invoice_open_amount_usd": 1000.0,
      "invoice_due_amount_local": 1000.0,
      "invoice_due_amount_usd": 1000.0
    }
  ],
  "insights": {
    "total_invoices": 100,
    "total_due_amount_local": 50000.0,
    "total_due_amount_usd": 50000.0,
    "invoice_status_distribution": {
      "OPEN": 60,
      "PAST DUE": 30,
      "CLOSED": 10
    },
    "customer_invoice_count": {
      "Acme Corp.": 50,
      "Beta Corp.": 30,
      "Gamma Corp.": 20
    },
    "highest_invoice_due": {
      "invoice_number": "INV123456",
      "due_amount_local": 1000.0,
      "due_amount_usd": 1000.0
    },
    "aging_bucket_distribution": {
      "0-30": 60,
      "31-60": 30,
      "61-90": 10
    },
    "total_open_amount_local": 20000.0,
    "total_open_amount_usd": 20000.0
  }
}
Response Fields:
sql_query: The SQL query generated from the natural language input.
data: An array of invoice objects, each containing:
subsidiary: The subsidiary associated with the invoice.
business_unit: The business unit related to the invoice.
customer_name: The name of the customer.
invoice_number: The invoice number.
invoice_date: The date the invoice was issued.
invoice_status: The current status of the invoice (OPEN, PAST DUE, CLOSED).
invoice_due_date: The due date for payment.
invoice_aging_bucket: The aging bucket the invoice falls into (0-30, 31-60, 61-90 days).
memo: A memo or note associated with the invoice.
invoice_original_amount_local: The original invoice amount in local currency.
invoice_original_amount_usd: The original invoice amount in USD.
invoice_open_amount_local: The open invoice amount in local currency.
invoice_open_amount_usd: The open invoice amount in USD.
invoice_due_amount_local: The due invoice amount in local currency.
invoice_due_amount_usd: The due invoice amount in USD.
insights: Insights related to the data retrieved, including:
total_invoices: The total number of invoices returned.
total_due_amount_local: The total due amount in local currency.
total_due_amount_usd: The total due amount in USD.
invoice_status_distribution: The distribution of invoices across different statuses (e.g., OPEN, PAST DUE).
customer_invoice_count: The number of invoices per customer.
highest_invoice_due: Information on the highest due invoice (invoice number and amount).
aging_bucket_distribution: The distribution of invoices across aging buckets.
total_open_amount_local: The total open amount across all invoices in local currency.
total_open_amount_usd: The total open amount across all invoices in USD.

Error Codes:
400 - Bad Request:
This error occurs if the input is invalid or required fields are missing.
json

{
  "error": "Invalid input or missing required fields."
}

401 - Unauthorized:
This error is returned if the request lacks valid authentication tokens.
json

{
  "error": "Unauthorized, invalid or missing authentication tokens."
}

429 - Too Many Requests:
This error occurs if the rate limit is exceeded (100 requests per minute).
json

{
  "error": "Too many requests, rate limit exceeded.",
  "retry_after": 60,
  "limit": 100
}
retry_after: The number of seconds the client should wait before retrying.
limit: The maximum number of requests allowed per minute.

500 - Internal Server Error:
This error occurs if something goes wrong on the server side.
json
Copy
{
  "error": "Internal server error."
}

Example Request and Response
Request:
POST https://production-domain.com/api/v1/invoices/query
Content-Type: application/json
Authorization: Bearer <your-api-token>

{
  "query": "Show all invoices for Acme Corp.",
  "page": 1,
  "page_size": 100,
  "sort_by": "invoice_date",
  "sort_order": "desc"
}
Response (200 OK):
json

{
  "sql_query": "SELECT * FROM invoices WHERE customer_name = 'Acme Corp.'",
  "data": [
    {
      "subsidiary": "SubsidiaryA123",
      "business_unit": "Sales",
      "customer_name": "Acme Corp.",
      "invoice_number": "INV123456",
      "invoice_date": "2024-01-01",
      "invoice_status": "OPEN",
      "invoice_due_date": "2024-02-01",
      "invoice_aging_bucket": "0-30",
      "memo": "Initial invoice",
      "invoice_original_amount_local": 1000.0,
      "invoice_original_amount_usd": 1000.0,
      "invoice_open_amount_local": 1000.0,
      "invoice_open_amount_usd": 1000.0,
      "invoice_due_amount_local": 1000.0,
      "invoice_due_amount_usd": 1000.0
    }
  ],
  "insights": {
    "total_invoices": 100,
    "total_due_amount_local": 50000.0,
    "total_due_amount_usd": 50000.0,
    "invoice_status_distribution": {
      "OPEN": 60,
      "PAST DUE": 30,
      "CLOSED": 10
    },
    "customer_invoice_count": {
      "Acme Corp.": 50,
      "Beta Corp.": 30,
      "Gamma Corp.": 20
    },
    "highest_invoice_due": {
      "invoice_number": "INV123456",
      "due_amount_local": 1000.0,
      "due_amount_usd": 1000.0
    },
    "aging_bucket_distribution": {
      "0-30": 60,
      "31-60": 30,
      "61-90": 10
    },
    "total_open_amount_local": 20000.0,
    "total_open_amount_usd": 20000.0
  }
}

---------------------------------------------------------------
# openAPI.yaml specification
-----------------------------------------------------------------
openapi: 3.0.0
info:
  title: AR Invoice Query API
  description: A full-stack application allowing users to input natural language queries to retrieve AR invoice data from a Snowflake database using OpenAI.
  version: 1.0.0
servers:
  - url: https://production-domain.com/api/v1
    description: Production server (deployed on AWS)

paths:
  /invoices/query:
    post:
      summary: Accepts a natural language query, generates an equivalent SQL query, executes it against the database, and returns the top 100 AR Invoices data along with dynamic insights.
      description: The endpoint processes natural language queries, generates corresponding SQL queries, executes them against a Snowflake database, and returns the requested invoices with pagination, sorting, and dynamic insights.
      operationId: queryInvoices
      tags:
        - Invoices
      requestBody:
        description: Natural language query to be processed and executed against the database.
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The natural language query input by the user.
                  example: "Show all invoices for Acme Corp."
              required:
                - query
        required: true
      parameters:
        - name: page
          in: query
          description: The page number for pagination (default is 1).
          required: false
          schema:
            type: integer
            example: 1
        - name: page_size
          in: query
          description: The number of invoices to return per page (maximum 100).
          required: false
          schema:
            type: integer
            example: 100
        - name: sort_by
          in: query
          description: The field to sort by (e.g., 'invoice_date', 'invoice_number').
          required: false
          schema:
            type: string
            example: invoice_date
        - name: sort_order
          in: query
          description: The sorting order (either 'asc' for ascending or 'desc' for descending).
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: desc
      responses:
        '200':
          description: A successful response with the aggregated AR invoices data and dynamic insights.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sql_query:
                    type: string
                    description: The generated SQL query that was executed against the database.
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        subsidiary:
                          type: string
                          description: Alphanumeric identifier for the subsidiary (e.g., "SubsidiaryA123")
                        business_unit:
                          type: string
                          description: Business unit associated with the invoice.
                        customer_name:
                          type: string
                          description: Name of the customer.
                        invoice_number:
                          type: string
                          description: Invoice number, prefixed with "INV" (e.g., "INV123456")
                          example: "INV123456"
                        invoice_date:
                          type: string
                          format: date
                          description: The date the invoice was issued.
                        invoice_status:
                          type: string
                          enum: ["OPEN", "PAST DUE", "CLOSED"]
                          description: The status of the invoice (e.g., OPEN, PAST DUE, PAID, CLOSED).
                        invoice_due_date:
                          type: string
                          format: date
                          description: The due date of the invoice.
                        invoice_aging_bucket:
                          type: string
                          enum: ["0-30", "31-60", "61-90"]
                          description: The aging bucket for the invoice based on due date.
                        memo:
                          type: string
                          description: A memo or note associated with the invoice.
                        invoice_original_amount_local:
                          type: number
                          format: float
                          description: The original amount of the invoice in local currency.
                        invoice_original_amount_usd:
                          type: number
                          format: float
                          description: The original amount of the invoice in USD.
                        invoice_open_amount_local:
                          type: number
                          format: float
                          description: The open amount of the invoice in the local currency.
                        invoice_open_amount_usd:
                          type: number
                          format: float
                          description: The open amount of the invoice in USD.
                        invoice_due_amount_local:
                          type: number
                          format: float
                          description: The due amount of the invoice in the local currency.
                        invoice_due_amount_usd:
                          type: number
                          format: float
                          description: The due amount of the invoice in USD.
                  insights:
                    type: object
                    properties:
                      total_invoices:
                        type: integer
                        description: Total number of invoices across all pages.
                      total_due_amount_local:
                        type: number
                        format: float
                        description: Total due amount in local currency across all pages.
                      total_due_amount_usd:
                        type: number
                        format: float
                        description: Total due amount in USD across all pages.
                      invoice_status_distribution:
                        type: object
                        additionalProperties:
                          type: integer
                        description: Distribution of invoices by status (e.g., OPEN, PAST DUE, PAID, CLOSED).
                      customer_invoice_count:
                        type: object
                        description: A breakdown of the number of invoices per customer.
                        additionalProperties:
                          type: integer
                      highest_invoice_due:
                        type: object
                        properties:
                          invoice_number:
                            type: string
                          due_amount_local:
                            type: number
                            format: float
                          due_amount_usd:
                            type: number
                            format: float
                        description: Information on the highest due invoice.
                      aging_bucket_distribution:
                        type: object
                        additionalProperties:
                          type: integer
                        description: Distribution of invoices across aging buckets (e.g., "0-30 days", "31-60 days", "60-90 days").
                      total_open_amount_local:
                        type: number
                        format: float
                        description: Total open amount across all invoices in local currency.
                      total_open_amount_usd:
                        type: number
                        format: float
                        description: Total open amount across all invoices in USD.
        '400':
          description: Invalid input or missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the validation issue.
        '401':
          description: Unauthorized, invalid or missing authentication tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message for unauthorized access.
        '429':
          description: Too many requests, rate limit exceeded (100 requests per minute).
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating rate limiting.
                  retry_after:
                    type: integer
                    description: Time in seconds until the client can retry.
                  limit:
                    type: integer
                    description: The maximum number of requests allowed per minute.
                    example: 100
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the internal error.
      security:
        - BearerAuth: []
        - UserToken: []
    securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
        description: Use an API access token for authentication.
      UserToken:
        type: apiKey
        in: header
        name: x-token
        description: Use a user-specific access token for authentication.

components:
  schemas:
    Invoice:
      type: object
      properties:
        subsidiary:
          type: string
          description: Alphanumeric identifier for the subsidiary (e.g., "SubsidiaryA123")
        business_unit:
          type: string
          description: Business unit associated with the invoice.
        customer_name:
          type: string
          description: Name of the customer.
        invoice_number:
          type: string
          description: Invoice number, prefixed with "INV" (e.g., "INV123456")
        invoice_date:
          type: string
          format: date
          description: The date the invoice was issued.
        invoice_status:
          type: string
          enum: ["OPEN", "PAST DUE", "CLOSED"]
          description: The status of the invoice.
        invoice_due_date:
          type: string
          format: date
          description: The due date of the invoice.
        invoice_aging_bucket:
          type: string
          enum: ["0-30", "31-60", "61-90"]
          description: The aging bucket for the invoice based on due date.
        memo:
          type: string
          description: A memo or note associated with the invoice.
        invoice_original_amount_local:
          type: number
          format: float
          description: The original amount of the invoice in local currency.
        invoice_original_amount_usd:
          type: number
          format: float
          description: The original amount of the invoice in USD.
        invoice_open_amount_local:
          type: number
          format: float
          description: The open amount of the invoice in the local currency.
        invoice_open_amount_usd:
          type: number
          format: float
          description: The open amount of the invoice in USD.
        invoice_due_amount_local:
          type: number
          format: float
          description: The due amount of the invoice in the local currency.
        invoice_due_amount_usd:
          type: number
          format: float
          description: The due amount of the invoice in USD.
    Error:
      type: object
      properties:
        error:
          type: string
  
    RateLimitError:
    type: object
    properties:
     error:
      type: string
      description: Error message indicating rate limiting.
     retry_after:
      type: integer
      description: Time in seconds to wait before retrying the request. The client must wait for this duration before making another request.
      example: 60
     limit:
      type: integer
      description: The maximum number of requests allowed per minute.
      example: 100

